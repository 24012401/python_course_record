'''
生成器

特点：
1、因为自动创建了 iter()和 next()方法,生成器显得特别简洁。
2、生成器是高效的。
3、使用生成器表达式取代列表解析可以同时节省内存。
4、会自动抛出 StopIteration 异常。
5、生成器能实现迭代器所有的功能。

区别：
迭代器通常先定义一个迭代器类，然后通过创建实例来创建迭代器；
生成器则是先定义一个包含yield语句的函数，然后通过调用函数来创建生成器；
使用生成器会让程序变得很优雅。
'''
'''
定义一个生成器，52张扑克牌，分别按顺序返回52张扑克牌，分别是黑桃、红心、梅花、方块的2-A。
'''


def squeezer():
    values = ('2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A')
    flowers = ('♠', '♥', '♣', '♦')
    for i in range(52):
        yield flowers[i // 13] + values[i % 13]


if __name__ == '__main__':
    sq = squeezer()
    print(next(sq))
    print(next(sq))
    for j in sq:
        print(j, end=' ')
